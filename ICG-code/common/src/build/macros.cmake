# setting cmake configuration
# setting cmake configuration
#set(CMAKE_VERBOSE_MAKEFILE on)

# setting up output paths
macro(output_directories_default)
    if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
        set(BIN_DIR_SUFFIX mk)
    elseif(CMAKE_GENERATOR STREQUAL "Xcode")
        set(BIN_DIR_SUFFIX xcode)
    endif(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../bin/${BIN_DIR_SUFFIX})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../lib/${BIN_DIR_SUFFIX})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../lib/${BIN_DIR_SUFFIX})
endmacro(output_directories_default)

macro(compiler_flags_default)
    # setting up os specific paths
    if(APPLE)
        add_definitions(-Wall)
        add_definitions(-Wno-non-virtual-dtor)
        add_definitions(-Wno-unknown-pragmas)
    endif(APPLE)
    if(WIN32)
        add_definitions(-D_SCL_SECURE_NO_WARNINGS)
        add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    endif(WIN32)
	if(NOT WIN32)
		add_definitions(-std=gnu++0x)
	endif()
	IF( ${CMAKE_COMPILER_IS_GNUCXX} )
		ADD_DEFINITIONS(-static-libgcc)
		SET(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE}-static-libgcc")
	ENDIF( ${CMAKE_COMPILER_IS_GNUCXX} )
endmacro(compiler_flags_default)

# macro to add other libs directory
macro(proj_directories dir)
    if(APPLE)
        set(EXT_DIR ${dir}/../ext/osx)
        set(ADDITIONAL_INCLUDE_DIRS /opt/local/include)
        set(ADDITIONAL_LIBRARY_DIRS /opt/local/lib)
    elseif(WIN32)
		if (CMAKE_GENERATOR MATCHES "Win64")
			set(EXT_DIR ${dir}/../ext/w64)
		else(CMAKE_GENERATOR MATCHES "Win64")
			set(EXT_DIR ${dir}/../ext/w32)
		endif(CMAKE_GENERATOR MATCHES "Win64")
        set(ADDITIONAL_INCLUDE_DIRS ${EXT_DIR}/include/pthread)
        #set(ADDITIONAL_INCLUDE_DIRS ${EXT_DIR}/include/boost/boost_1_39_0)
        #set(ADDITIONAL_LIBRARY_DIRS )
        #find_path(DIRECTX_INCLUDE_DIR dxdiag.h "$ENV{DXSDK_DIR}" "$ENV{DXSDK_DIR}/Include")
	    #include_directories(${DIRECTX_INCLUDE_DIR})
	elseif(UNIX)
		set(EXT_DIR ${dir}/../ext/lin)
		set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} ${EXT_DIR}/lib/tbb)
    endif(APPLE)
    include_directories(${dir}/libs)
    include_directories(${EXT_DIR}/include)
    include_directories(${ADDITIONAL_INCLUDE_DIRS})
	#find_path(DIRECTX_INCLUDE_DIR dxdiag.h "$ENV{DXSDK_DIR}" "$ENV{DXSDK_DIR}/Include")
	#include_directories(${DIRECTX_INCLUDE_DIR})
    set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} ${EXT_DIR}/lib)
    set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} ${ADDITIONAL_LIBRARY_DIRS})
endmacro(proj_directories)

# macro to add default libs directory
macro(proj_directories_default)
    proj_directories(${PROJECT_SOURCE_DIR})
    foreach(dir ${ARGV})
        proj_directories(${dir})
    endforeach(dir)
endmacro(proj_directories_default)

# macro that sets the default build type to release
macro(default_release)
    set(CMAKE_BUILD_TYPE Release)
endmacro(default_release)

macro(default_debug)
    set(CMAKE_BUILD_TYPE Debug)
endmacro(default_debug)
